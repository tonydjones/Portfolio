# Generated by Django 3.1.2 on 2021-01-12 23:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('timestamp', models.DateTimeField(blank=True, default=None)),
                ('connections_count', models.IntegerField(default=0)),
                ('pen_name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('author', models.BooleanField(default=False)),
                ('author_fantasy', models.BooleanField(default=False)),
                ('author_scifi', models.BooleanField(default=False)),
                ('author_historical', models.BooleanField(default=False)),
                ('author_bio', models.BooleanField(default=False)),
                ('author_realistic', models.BooleanField(default=False)),
                ('author_children', models.BooleanField(default=False)),
                ('author_young', models.BooleanField(default=False)),
                ('author_adult', models.BooleanField(default=False)),
                ('author_spiritual', models.BooleanField(default=False)),
                ('author_help', models.BooleanField(default=False)),
                ('author_short', models.BooleanField(default=False)),
                ('author_novel', models.BooleanField(default=False)),
                ('author_poetry', models.BooleanField(default=False)),
                ('author_comic', models.BooleanField(default=False)),
                ('editor', models.BooleanField(default=False)),
                ('editor_fantasy', models.BooleanField(default=False)),
                ('editor_scifi', models.BooleanField(default=False)),
                ('editor_historical', models.BooleanField(default=False)),
                ('editor_bio', models.BooleanField(default=False)),
                ('editor_realistic', models.BooleanField(default=False)),
                ('editor_children', models.BooleanField(default=False)),
                ('editor_young', models.BooleanField(default=False)),
                ('editor_adult', models.BooleanField(default=False)),
                ('editor_spiritual', models.BooleanField(default=False)),
                ('editor_help', models.BooleanField(default=False)),
                ('editor_short', models.BooleanField(default=False)),
                ('editor_novel', models.BooleanField(default=False)),
                ('editor_poetry', models.BooleanField(default=False)),
                ('editor_comic', models.BooleanField(default=False)),
                ('agent', models.BooleanField(default=False)),
                ('agent_fantasy', models.BooleanField(default=False)),
                ('agent_scifi', models.BooleanField(default=False)),
                ('agent_historical', models.BooleanField(default=False)),
                ('agent_bio', models.BooleanField(default=False)),
                ('agent_realistic', models.BooleanField(default=False)),
                ('agent_children', models.BooleanField(default=False)),
                ('agent_young', models.BooleanField(default=False)),
                ('agent_adult', models.BooleanField(default=False)),
                ('agent_spiritual', models.BooleanField(default=False)),
                ('agent_help', models.BooleanField(default=False)),
                ('agent_short', models.BooleanField(default=False)),
                ('agent_novel', models.BooleanField(default=False)),
                ('agent_poetry', models.BooleanField(default=False)),
                ('agent_comic', models.BooleanField(default=False)),
                ('publisher', models.BooleanField(default=False)),
                ('publisher_fantasy', models.BooleanField(default=False)),
                ('publisher_scifi', models.BooleanField(default=False)),
                ('publisher_historical', models.BooleanField(default=False)),
                ('publisher_bio', models.BooleanField(default=False)),
                ('publisher_realistic', models.BooleanField(default=False)),
                ('publisher_children', models.BooleanField(default=False)),
                ('publisher_young', models.BooleanField(default=False)),
                ('publisher_adult', models.BooleanField(default=False)),
                ('publisher_spiritual', models.BooleanField(default=False)),
                ('publisher_help', models.BooleanField(default=False)),
                ('publisher_short', models.BooleanField(default=False)),
                ('publisher_novel', models.BooleanField(default=False)),
                ('publisher_poetry', models.BooleanField(default=False)),
                ('publisher_comic', models.BooleanField(default=False)),
                ('proofreader', models.BooleanField(default=False)),
                ('author_count', models.IntegerField(default=0)),
                ('editor_count', models.IntegerField(default=0)),
                ('agent_count', models.IntegerField(default=0)),
                ('publisher_count', models.IntegerField(default=0)),
                ('proofreader_count', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default=None, max_length=100)),
                ('owner', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(blank=True)),
                ('receiver', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='received', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='sent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='agent_titles',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='agent', to='website.title'),
        ),
        migrations.AddField(
            model_name='user',
            name='author_titles',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='author', to='website.title'),
        ),
        migrations.AddField(
            model_name='user',
            name='connections',
            field=models.ManyToManyField(blank=True, default=None, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='editor_titles',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='editor', to='website.title'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='messages',
            field=models.ManyToManyField(blank=True, default=None, to='website.Message'),
        ),
        migrations.AddField(
            model_name='user',
            name='proofreader_titles',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='proofreader', to='website.title'),
        ),
        migrations.AddField(
            model_name='user',
            name='publisher_titles',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, related_name='publisher', to='website.title'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
